# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user              nginx nginx;
worker_processes  32;

error_log  /var/log/nginx/error.log info;
#error_log  /var/log/nginx/error.log  notice;
#error_log  /var/log/nginx/error.log  info;

pid        /var/run/nginx.pid;


events {
	use epoll;
    worker_connections  1024;
}


http {
	server_tokens off;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

	access_log on;
    access_log  /var/log/nginx/access.log  main;

rewrite_log on;
	charset utf-8;
	server_names_hash_bucket_size 128;
	client_header_buffer_size 32k;
	large_client_header_buffers 4 32k;
	client_max_body_size 300m;
	
	sendfile on;
	tcp_nopush on;

    keepalive_timeout  120;

	tcp_nodelay on;

    client_body_buffer_size 1024k;   
    #proxy_connect_timeout 20;   
    proxy_connect_timeout 60;   
    proxy_read_timeout 120;   
    proxy_send_timeout 60;   
    proxy_buffer_size 32k;   
    proxy_buffers 8 64k;   
    proxy_busy_buffers_size 128k;   
    proxy_temp_file_write_size 128k;   


    gzip  on;

    gzip_min_length 1k;   
    gzip_buffers 4 16k;   
    gzip_http_version 1.1;   
    gzip_comp_level 2;   
    gzip_types text/plain application/x-javascript text/css application/xml;   
    gzip_vary on;   

    #注：proxy_temp_path和proxy_cache_path指定的路径必须在同一分区   
    proxy_temp_path /data/nginx/proxy;   
    #设置Web缓存区名称为cache_one，内存缓存空间大小为200MB，1天清理一次缓存，硬盘缓存空间大小为30GB。   
    proxy_cache_path /data/nginx/cache levels=1:2 keys_zone=cache_one:200m inactive=1d max_size=10g;   

    upstream backend_server 
    {   
        server 127.0.0.1:8080 weight=9 max_fails=2 fail_timeout=30s ;   
    }   

	server
	{
		listen 80;
		#server_name

        #用于清除缓存，假设一个URL为http://192.168.8.42/test.txt，通过访问http://192.168.8.42/purge/test.txt就可以清除该URL的缓存。
		#location ~ /purge(/.*)   
        #{   
        #    #设置只允许指定的IP或IP段才可以清除URL缓存。   
        #    #allow 127.0.0.1;   
        #    #allow 119.40.37.241;
        #    #allow 119.40.37.242;
        #    #allow 119.40.37.243;
        #    #allow 119.40.37.244;
        #    #allow 202.43.150.204;
        #    #allow 192.168.0.0/16;   
        #    #allow 172.16.1.0/24;   
        #    #deny all;   
		#	#allow all;
        #    #proxy_cache_purge cache_one $host$1$is_args$args;   
        #}   

        location ~ \.(ico|js|css|png|jpg|json|xml)$
        {   
            gunzip on;
            proxy_next_upstream http_502 http_504 error timeout invalid_header;
            proxy_cache cache_one;
            proxy_cache_valid 200 304 1h; 
            proxy_cache_key $host$uri;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            add_header X-Cache "Hit from Nginx-Cache";
            proxy_ignore_headers "Cache-Control" "Expires";
            proxy_pass http://backend_server;
            expires 30m; 
        }      

        location /
        {
            #如果后端的服务器返回502、504、执行超时等错误，自动将请求转发到upstream负载均衡池中的另一台服务器，实现故障转移。
            proxy_next_upstream http_502 http_504 error timeout invalid_header;

            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_pass http://backend_server;
        }

        #扩展名以.php、.jsp、.cgi结尾的动态应用程序不缓存。   
        location ~ .*\.(php|jsp|cgi)?$   
        {   
            proxy_set_header Host $host;   
            proxy_set_header X-Forwarded-For $remote_addr;   
            proxy_pass http://backend_server;   
        }   

	}
    
    # Load config files from the /etc/nginx/conf.d directory
    # The default server is in conf.d/default.conf
    #include /etc/nginx/conf.d/*.conf;
	server
	{
		listen 80;
		server_name www.example.com;

		index index.php index.html index.htm;
		root /var/vhost/exmaple/www/;
		if (!-e $request_filename) {
		   rewrite ^/index\.php/(.*)  /index.php/$1 last;
		}

        location ~ \.(ico|js|css|png|jpg|json|xml)$
        {   
            gunzip on;
            proxy_next_upstream http_502 http_504 error timeout invalid_header;
            proxy_cache cache_one;
            proxy_cache_valid 200 304 1h; 
            proxy_cache_key $host$uri;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $remote_addr;
            add_header X-Cache "Hit from Nginx-Cache";
            proxy_ignore_headers "Cache-Control" "Expires";
            proxy_pass http://backend_server;
            expires 30m; 
        }      

        #扩展名以.php、.jsp、.cgi结尾的动态应用程序不缓存。   
        #location ~ .*\.php
        location ~ .*\.(php|php5)?$
        {   
      		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      		#fastcgi_param PATH_INFO $request_filename;
     		include fastcgi.conf;
			#include pathinfo.conf;
            proxy_set_header Host $host;   
            proxy_set_header X-Forwarded-For $remote_addr;   
            #proxy_pass http://backend_server;   
			include fastcgi_params;
			fastcgi_pass 127.0.0.1:9000;
			fastcgi_index index.php;
			#fastcgi_param SCRIPT_FILENAME /usr/local/nginx/html$fastcgi_script_name;
        }   

	}
}
